// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotaFiscal.Data;

#nullable disable

namespace NotaFiscal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808171207_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotaFiscal.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomeRazaoSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CpfCnpj")
                        .IsUnique()
                        .HasDatabaseName("IX_Cliente_CpfCnpj");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Cliente_Email");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("NotaFiscal.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoEndereco")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente")
                        .HasDatabaseName("IX_Endereco_IdCliente");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("NotaFiscal.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Data")
                        .HasDatabaseName("IX_Venda_Data");

                    b.HasIndex("IdCliente")
                        .HasDatabaseName("IX_Venda_IdCliente");

                    b.HasIndex("IdEndereco")
                        .HasDatabaseName("IX_Venda_IdEndereco");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("NotaFiscal.Models.Endereco", b =>
                {
                    b.HasOne("NotaFiscal.Models.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Endereco_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("NotaFiscal.Models.Venda", b =>
                {
                    b.HasOne("NotaFiscal.Models.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Venda_Cliente");

                    b.HasOne("NotaFiscal.Models.Endereco", "Endereco")
                        .WithMany("Vendas")
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Venda_Endereco");

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("NotaFiscal.Models.Cliente", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("NotaFiscal.Models.Endereco", b =>
                {
                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
